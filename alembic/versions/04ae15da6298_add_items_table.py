"""add items table

Revision ID: 04ae15da6298
Revises:
Create Date: 2024-09-26 14:39:13.438205

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "04ae15da6298"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_items_id"), "items", ["id"], unique=False)
    op.create_index(op.f("ix_items_title"), "items", ["title"], unique=False)
    op.enable_rls("items")
    op.create_policy(
        table_name="items",
        policy_name="items_permissive_all_policy_0",
        cmd="ALL",
        definition="PERMISSIVE",
        expr="owner_id > NULLIF(current_setting('rls.items_sub_bearer_token_payload_condition_0_policy_0', true),'')::INTEGER",
    )
    op.disable_rls("users")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.enable_rls("users")
    op.drop_policy(tablename="items", policyname="items_permissive_all_policy_0")
    op.disable_rls("items")
    op.drop_index(op.f("ix_items_title"), table_name="items")
    op.drop_index(op.f("ix_items_id"), table_name="items")
    op.drop_table("items")
    # ### end Alembic commands ###
